--
-- PostgreSQL database dump
--

-- Dumped from database version 16.1 (Debian 16.1-1.pgdg120+1)
-- Dumped by pg_dump version 16.3 (Homebrew)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: -
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: -
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: update_members_updated_at(); Type: FUNCTION; Schema: public; Owner: -
--
--
-- CREATE FUNCTION public.update_members_updated_at() RETURNS trigger
--     LANGUAGE plpgsql
--     AS $$
-- BEGIN
--     NEW.updated_at = CURRENT_TIMESTAMP;
--     RETURN NEW;
-- END;
-- $$;


SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: build_items; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.build_items (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    build_id uuid NOT NULL,
    item_id uuid NOT NULL,
    slot text NOT NULL
);


--
-- Name: build_skills; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.build_skills (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    build_id uuid NOT NULL,
    skill_id uuid NOT NULL
);


--
-- Name: builds; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.builds (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    member_id uuid NOT NULL,
    title text NOT NULL,
    description text NOT NULL,
    main_skill_id uuid NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


--
-- Name: goose_db_version; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.goose_db_version (
    id integer NOT NULL,
    version_id bigint NOT NULL,
    is_applied boolean NOT NULL,
    tstamp timestamp without time zone DEFAULT now() NOT NULL
);


--
-- Name: goose_db_version_id_seq; Type: SEQUENCE; Schema: public; Owner: -
--

ALTER TABLE public.goose_db_version ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.goose_db_version_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: items; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.items (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    category text NOT NULL,
    class text NOT NULL,
    type text NOT NULL,
    name text NOT NULL,
    description text,
    image_url text,
    required_level text,
    required_strength text,
    required_dexterity text,
    required_intelligence text,
    armour text,
    block text,
    energy_shield text,
    evasion text,
    ward text,

    damage text,
    aps text,
    crit text,
    pdps text,
    edps text,
    dps text,

    life text,
    mana text,
    duration text,
    usage text,
    capacity text,

    additional text,
    stats text[],
    
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT items_category_check CHECK ((category <> ''::text)),
    CONSTRAINT items_class_check CHECK ((class <> ''::text)),
    CONSTRAINT items_name_check CHECK ((name <> ''::text)),
    CONSTRAINT items_type_check CHECK ((type <> ''::text))
);


--
-- Name: base_items; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.base_items (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    category text NOT NULL,
    class text NOT NULL,
    type text NOT NULL,
    name text NOT NULL,
    image_url text,
    required_level text,
    required_strength text,
    required_dexterity text,
    required_intelligence text,
    armour text,
    energy_shield text,
    evasion text,
    ward text,

    damage text,
    aps text,
    crit text,
    dps text,

    stats text[],
    
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT items_category_check CHECK ((category <> ''::text)),
    CONSTRAINT items_class_check CHECK ((class <> ''::text)),
    CONSTRAINT items_name_check CHECK ((name <> ''::text)),
    CONSTRAINT items_type_check CHECK ((type <> ''::text))
);

--
-- Name: base_items; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.item_mods (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    affix text NOT NULL,
    name text NOT NULL,
	level text NOT NULL,
	stat text NOT NULL,
	tags text,
    
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
);

--
-- Name: members; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.members (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    name text NOT NULL,
    email text NOT NULL,
    password text NOT NULL,
    status smallint DEFAULT 1 NOT NULL,
    average_rating numeric(2,1) DEFAULT 0,
    CONSTRAINT members_average_rating_check CHECK (((average_rating >= (0)::numeric) AND (average_rating <= (5)::numeric))),
    CONSTRAINT members_status_check CHECK ((status = ANY (ARRAY[1, 2])))
);


--
-- Name: ratings; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.ratings (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    build_id uuid NOT NULL,
    rating integer,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT ratings_rating_check CHECK (((rating >= 1) AND (rating <= 10)))
);


--
-- Name: skills; Type: TABLE; Schema: public; Owner: -
--

CREATE TABLE public.skills (
    id uuid DEFAULT public.uuid_generate_v4() NOT NULL,
    name text NOT NULL,
    type text NOT NULL,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT skills_type_check CHECK ((type = ANY (ARRAY['active'::text, 'support'::text])))
);


--
-- Name: build_items build_items_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.build_items
    ADD CONSTRAINT build_items_pkey PRIMARY KEY (id);


--
-- Name: build_skills build_skills_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.build_skills
    ADD CONSTRAINT build_skills_pkey PRIMARY KEY (id);


--
-- Name: builds builds_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.builds
    ADD CONSTRAINT builds_pkey PRIMARY KEY (id);


--
-- Name: goose_db_version goose_db_version_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.goose_db_version
    ADD CONSTRAINT goose_db_version_pkey PRIMARY KEY (id);


--
-- Name: items items_name_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.items
    ADD CONSTRAINT items_name_key UNIQUE (name);


--
-- Name: items items_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.items
    ADD CONSTRAINT items_pkey PRIMARY KEY (id);


--
-- Name: members members_email_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.members
    ADD CONSTRAINT members_email_key UNIQUE (email);


--
-- Name: members members_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.members
    ADD CONSTRAINT members_pkey PRIMARY KEY (id);


--
-- Name: ratings ratings_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ratings
    ADD CONSTRAINT ratings_pkey PRIMARY KEY (id);


--
-- Name: skills skills_name_key; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.skills
    ADD CONSTRAINT skills_name_key UNIQUE (name);


--
-- Name: skills skills_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.skills
    ADD CONSTRAINT skills_pkey PRIMARY KEY (id);


--
-- Name: members set_members_updated_at; Type: TRIGGER; Schema: public; Owner: -
--

-- CREATE TRIGGER set_members_updated_at BEFORE UPDATE ON public.members FOR EACH ROW EXECUTE FUNCTION public.update_members_updated_at();


--
-- Name: build_items build_items_build_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.build_items
    ADD CONSTRAINT build_items_build_id_fkey FOREIGN KEY (build_id) REFERENCES public.builds(id) ON DELETE CASCADE;


--
-- Name: build_items build_items_item_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.build_items
    ADD CONSTRAINT build_items_item_id_fkey FOREIGN KEY (item_id) REFERENCES public.items(id) ON DELETE CASCADE;


--
-- Name: build_skills build_skills_build_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.build_skills
    ADD CONSTRAINT build_skills_build_id_fkey FOREIGN KEY (build_id) REFERENCES public.builds(id) ON DELETE CASCADE;


--
-- Name: build_skills build_skills_skill_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.build_skills
    ADD CONSTRAINT build_skills_skill_id_fkey FOREIGN KEY (skill_id) REFERENCES public.skills(id) ON DELETE CASCADE;


--
-- Name: builds builds_main_skill_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.builds
    ADD CONSTRAINT builds_main_skill_id_fkey FOREIGN KEY (main_skill_id) REFERENCES public.skills(id) ON DELETE RESTRICT;


--
-- Name: builds builds_member_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.builds
    ADD CONSTRAINT builds_member_id_fkey FOREIGN KEY (member_id) REFERENCES public.members(id) ON DELETE CASCADE;


--
-- Name: ratings ratings_build_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--

ALTER TABLE ONLY public.ratings
    ADD CONSTRAINT ratings_build_id_fkey FOREIGN KEY (build_id) REFERENCES public.builds(id) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

